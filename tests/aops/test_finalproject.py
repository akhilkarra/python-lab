import pytest
from src.aops.finalproject import create_board


# Test create_board with the expected board
@pytest.mark.parametrize(
    "expected",
    [
        {
            (0, 0): ".",
            (0, 1): ".",
            (0, 2): ".",
            (0, 3): ".",
            (0, 4): ".",
            (0, 5): ".",
            (0, 6): ".",
            (1, 0): ".",
            (1, 1): ".",
            (1, 2): ".",
            (1, 3): ".",
            (1, 4): ".",
            (1, 5): ".",
            (1, 6): ".",
            (2, 0): ".",
            (2, 1): ".",
            (2, 2): ".",
            (2, 3): ".",
            (2, 4): ".",
            (2, 5): ".",
            (2, 6): ".",
            (3, 0): ".",
            (3, 1): ".",
            (3, 2): ".",
            (3, 3): ".",
            (3, 4): ".",
            (3, 5): ".",
            (3, 6): ".",
            (4, 0): ".",
            (4, 1): ".",
            (4, 2): ".",
            (4, 3): ".",
            (4, 4): ".",
            (4, 5): ".",
            (4, 6): ".",
            (5, 0): ".",
            (5, 1): ".",
            (5, 2): ".",
            (5, 3): ".",
            (5, 4): ".",
            (5, 5): ".",
            (5, 6): ".",
            (6, 0): ".",
            (6, 1): ".",
            (6, 2): ".",
            (6, 3): ".",
            (6, 4): ".",
            (6, 5): ".",
            (6, 6): ".",
        }
    ],
)
def test_create_board(expected: dict[tuple[int, int], str]) -> None:
    assert create_board() == expected
